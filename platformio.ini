; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
include_dir = uCNC
src_dir = uCNC
default_envs = uno, ramps14, rambo, arduinoM0, bluepill_f103c8, blackpill_f401cc, d1, re_arm, d1_r32, rpi_pico_w
extra_configs = 
	uCNC/src/hal/boards/avr/avr.ini
	uCNC/src/hal/boards/samd21/samd21.ini
	uCNC/src/hal/boards/stm32/stm32.ini
	uCNC/src/hal/boards/esp8266/esp8266.ini
	uCNC/src/hal/boards/lpc176x/lpc176x.ini
	uCNC/src/hal/boards/esp32/esp32.ini
	uCNC/src/hal/boards/rp2040/rp2040.ini

[common]
build_flags = -std=gnu99 -Wall -fdata-sections -ffunction-sections -fno-exceptions -Wl,--gc-sections

[env]
framework = arduino
build_flags = ${common.build_flags}
monitor_speed = 115200
monitor_eol = LF
monitor_echo = yes
monitor_filters = colorize, time

[common_avr]
platform = atmelavr
framework = arduino
extra_scripts = avr_compiler.py
debug_build_flags = -Og -g3 -ggdb3 -gdwarf-2
build_flags = ${common.build_flags} -mcall-prologues -mrelax -flto -fno-fat-lto-objects -fno-tree-scev-cprop -Wl,--relax
lib_ignore = EEPROM, SPI, Wire

[env:uno]
extends = common_avr
board = uno
build_flags = ${common_avr.build_flags} -D BOARD=BOARD_UNO

[env:uno_shield_v3]
extends = common_avr
board = uno
build_flags = ${common_avr.build_flags} -D BOARD=BOARD_UNO_SHIELD_V3

[env:x_controller]
extends = common_avr
board = uno
build_flags = ${common_avr.build_flags} -D BOARD=BOARD_X_CONTROLLER

[env:mks_dlc]
extends = common_avr
board = uno
board_build.f_cpu = 20000000UL
build_flags = ${common_avr.build_flags} -D BOARD=BOARD_MKS_DLC

[env:ramps14]
extends = common_avr
board = megaatmega2560
build_flags = ${common_avr.build_flags} -D BOARD=BOARD_RAMPS14

[env:ramps14mirror]
extends = common_avr
board = megaatmega2560
build_flags = ${common_avr.build_flags} -D BOARD=BOARD_RAMPS14_MIRROR

[env:mks_gen_l_v1]
extends = common_avr
board = megaatmega2560
build_flags = ${common_avr.build_flags} -D BOARD=BOARD_MKS_GEN_L_V1

[env:rambo]
extends = common_avr
board = megaatmega2560
build_flags = ${common_avr.build_flags} -D BOARD=BOARD_RAMBO14

[common_samd21]
platform = atmelsam
board = zeroUSB
build_flags = ${common.build_flags} -nostdlib -fno-exceptions
lib_deps = https://github.com/Paciente8159/uCNC-tinyusb/archive/refs/heads/master.zip

[env:arduinoM0]
extends = common_samd21
build_flags = ${common_samd21.build_flags} -D BOARD=BOARD_MZERO
board_build.offset = 0x2000
board_upload.offset_address = 0x00002000

[env:arduinoZero]
extends = common_samd21
build_flags = ${common_samd21.build_flags} -D BOARD=BOARD_ZERO

[common_stm32]
platform = ststm32
upload_protocol = cmsis-dap
debug_tool = cmsis-dap
platform_packages = platformio/tool-openocd
debug_build_flags = -Og -g3 -ggdb3 -gdwarf-2
debug_init_cmds = 
	target extended-remote $DEBUG_PORT
	load
	monitor reset init
build_flags = ${common.build_flags} -D HAL_TIM_MODULE_DISABLED -D HAL_EXTI_MODULE_DISABLED -D HAL_UART_MODULE_ONLY
lib_deps = https://github.com/Paciente8159/uCNC-tinyusb/archive/refs/heads/master.zip
lib_ignore = EEPROM, SPI, Wire

[env:bluepill_f103c8]
extends = common_stm32
board = bluepill_f103c8
build_flags = ${common_stm32.build_flags} -D BOARD=BOARD_BLUEPILL -DFLASH_SIZE=0x10000UL

[env:bluepill_f103c8_clone]
extends = common_stm32
board = bluepill_f103c8
build_flags = ${common_stm32.build_flags} -D BOARD=BOARD_BLUEPILL -DFLASH_SIZE=0x10000UL
upload_flags = -c set CPUTAPID 0x2ba01477

[env:blackpill_f401cc]
extends = common_stm32
board = blackpill_f401cc
build_flags = ${common_stm32.build_flags} -D BOARD=BOARD_BLACKPILL
lib_deps = https://github.com/Paciente8159/uCNC-tinyusb/archive/refs/heads/master.zip

[env:blackpill_f411ce]
extends = common_stm32
board = blackpill_f411ce
build_flags = ${common_stm32.build_flags} -D BOARD=BOARD_BLACKPILL

[env:mks_robin_nano_v1_2]
extends = common_stm32
board = genericSTM32F103VE
board_build.offset = 0x7000
board_upload.offset_address = 0x08007000
board_build.f_cpu = 72000000L
build_flags = ${common_stm32.build_flags} -D BOARD=BOARD_MKS_ROBIN_NANO_V1_2

[env:skr_pro_v1_2]
extends = common_stm32
board = black_f407zg
board_build.offset = 0x8000
board_upload.offset_address = 0x08008000
board_build.f_cpu = 168000000L
build_flags = ${common_stm32.build_flags} -D BOARD=BOARD_SKR_PRO_V1_2

[env:d1]
platform = espressif8266
framework = arduino
board = d1
build_flags = -DBOARD=BOARD_WEMOS_D1 -DENABLE_WIFI
upload_speed = 256000
board_build.f_cpu = 160000000L

[common_lpc176x]
platform = https://github.com/p3p/pio-nxplpc-arduino-lpc176x/archive/0.1.3.zip
platform_packages = Paciente8159/framework-arduino-lpc176x @ https://github.com/Paciente8159/pio-framework-arduino-lpc176x/archive/0.2.10.zip
lib_ldf_mode = off
lib_compat_mode = strict
build_flags = ${common.build_flags} -D NXP_LPC17xx -D USE_ARDUINO_CDC

[env:re_arm]
extends = common_lpc176x
board = nxp_lpc1768
build_flags = ${common_lpc176x.build_flags} -D BOARD=BOARD_RE_ARM

[env:mks_base_v13]
extends = common_lpc176x
board = nxp_lpc1768
build_flags = ${common_lpc176x.build_flags} -D BOARD=BOARD_MKS_BASE13

[env:skr_v14_turbo]
extends = common_lpc176x
board = nxp_lpc1768
build_flags = ${common_lpc176x.build_flags} -D BOARD=BOARD_SKR_V14_TURBO

[common_esp32]
platform = espressif32
framework = arduino
board = wemos_d1_uno32
build_flags = -mlongcalls -Wno-frame-address -ffunction-sections -fdata-sections -ggdb -Os -freorder-blocks -Wwrite-strings -fstack-protector -fstrict-volatile-bitfields -Wall -fno-jump-tables -fno-tree-switch-conversion -std=gnu++11 -fexceptions -MMD -c -DENABLE_WIFI -DENABLE_BLUETOOTH -DUSE_ARDUINO_EEPROM_LIBRARY -DCORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_NONE
board_build.f_flash = 80000000L
board_build.f_cpu = 240000000L
board_build.partitions = huge_app.csv

[env:d1_r32]
extends = common_esp32
board = wemos_d1_uno32
build_flags = ${common_esp32.build_flags} -DBOARD=BOARD_WEMOS_D1_R32

[env:mks_tinybee]
extends = common_esp32
board = esp32dev
build_flags = ${common_esp32.build_flags} -DBOARD=BOARD_MKS_TINYBEE

[env:mks_dlc32]
extends = common_esp32
board = esp32dev
build_flags = ${common_esp32.build_flags} -DBOARD=BOARD_MKS_DLC32

[common_rp2040]
platform = https://github.com/maxgerhardt/platform-raspberrypi.git
platform_packages = 
	framework-arduinopico@https://github.com/earlephilhower/arduino-pico.git#master
framework = arduino
board_build.core = earlephilhower
board_build.mcu = rp2040
board_build.f_cpu = 133000000L

[env:rpi_pico]
extends = common_rp2040
board = rpipico
lib_ignore = HTTPUpdateServer, LittleFS, WiFi, WebServer, WiFi, SerialBT, DNSServer, Hash
build_flags = -DBOARD=BOARD_RPI_PICO

[env:rpi_pico_w]
extends = common_rp2040
board = rpipicow
build_flags = -DBOARD=BOARD_RPI_PICO_W -DENABLE_WIFI -DENABLE_BLUETOOTH -DPIO_FRAMEWORK_ARDUINO_ENABLE_BLUETOOTH
