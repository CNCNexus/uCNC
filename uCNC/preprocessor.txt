# 1 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\main.c"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\main.c"
# 1 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdio.h" 1 3
# 44 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdio.h" 3
# 1 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\inttypes.h" 1 3
# 37 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\inttypes.h" 3
# 1 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\lib\\gcc\\avr\\5.4.0\\include\\stdint.h" 1 3 4
# 9 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\lib\\gcc\\avr\\5.4.0\\include\\stdint.h" 3 4
# 1 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdint.h" 1 3 4
# 125 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdint.h" 3 4

# 125 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdint.h" 3 4
typedef signed int int8_t __attribute__((__mode__(__QI__)));
typedef unsigned int uint8_t __attribute__((__mode__(__QI__)));
typedef signed int int16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int uint16_t __attribute__ ((__mode__ (__HI__)));
typedef signed int int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int uint32_t __attribute__ ((__mode__ (__SI__)));

typedef signed int int64_t __attribute__((__mode__(__DI__)));
typedef unsigned int uint64_t __attribute__((__mode__(__DI__)));
# 146 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdint.h" 3 4
typedef int16_t intptr_t;




typedef uint16_t uintptr_t;
# 163 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdint.h" 3 4
typedef int8_t int_least8_t;




typedef uint8_t uint_least8_t;




typedef int16_t int_least16_t;




typedef uint16_t uint_least16_t;




typedef int32_t int_least32_t;




typedef uint32_t uint_least32_t;







typedef int64_t int_least64_t;






typedef uint64_t uint_least64_t;
# 217 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdint.h" 3 4
typedef int8_t int_fast8_t;




typedef uint8_t uint_fast8_t;




typedef int16_t int_fast16_t;




typedef uint16_t uint_fast16_t;




typedef int32_t int_fast32_t;




typedef uint32_t uint_fast32_t;







typedef int64_t int_fast64_t;






typedef uint64_t uint_fast64_t;
# 277 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdint.h" 3 4
typedef int64_t intmax_t;




typedef uint64_t uintmax_t;
# 10 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\lib\\gcc\\avr\\5.4.0\\include\\stdint.h" 2 3 4
# 38 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\inttypes.h" 2 3
# 77 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\inttypes.h" 3
typedef int32_t int_farptr_t;



typedef uint32_t uint_farptr_t;
# 45 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdio.h" 2 3
# 1 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\lib\\gcc\\avr\\5.4.0\\include\\stdarg.h" 1 3 4
# 40 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\lib\\gcc\\avr\\5.4.0\\include\\stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 98 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\lib\\gcc\\avr\\5.4.0\\include\\stdarg.h" 3 4
typedef __gnuc_va_list va_list;
# 46 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdio.h" 2 3




# 1 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\lib\\gcc\\avr\\5.4.0\\include\\stddef.h" 1 3 4
# 216 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\lib\\gcc\\avr\\5.4.0\\include\\stddef.h" 3 4
typedef unsigned int size_t;
# 51 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdio.h" 2 3
# 244 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdio.h" 3
struct __file {
 char *buf;
 unsigned char unget;
 uint8_t flags;
# 263 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdio.h" 3
 int size;
 int len;
 int (*put)(char, struct __file *);
 int (*get)(struct __file *);
 void *udata;
};
# 277 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdio.h" 3
typedef struct __file FILE;
# 407 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdio.h" 3
extern struct __file *__iob[];
# 419 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdio.h" 3
extern FILE *fdevopen(int (*__put)(char, FILE*), int (*__get)(FILE*));
# 436 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdio.h" 3
extern int fclose(FILE *__stream);
# 610 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdio.h" 3
extern int vfprintf(FILE *__stream, const char *__fmt, va_list __ap);





extern int vfprintf_P(FILE *__stream, const char *__fmt, va_list __ap);






extern int fputc(int __c, FILE *__stream);




extern int putc(int __c, FILE *__stream);


extern int putchar(int __c);
# 651 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdio.h" 3
extern int printf(const char *__fmt, ...);





extern int printf_P(const char *__fmt, ...);







extern int vprintf(const char *__fmt, va_list __ap);





extern int sprintf(char *__s, const char *__fmt, ...);





extern int sprintf_P(char *__s, const char *__fmt, ...);
# 687 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdio.h" 3
extern int snprintf(char *__s, size_t __n, const char *__fmt, ...);





extern int snprintf_P(char *__s, size_t __n, const char *__fmt, ...);





extern int vsprintf(char *__s, const char *__fmt, va_list ap);





extern int vsprintf_P(char *__s, const char *__fmt, va_list ap);
# 715 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdio.h" 3
extern int vsnprintf(char *__s, size_t __n, const char *__fmt, va_list ap);





extern int vsnprintf_P(char *__s, size_t __n, const char *__fmt, va_list ap);




extern int fprintf(FILE *__stream, const char *__fmt, ...);





extern int fprintf_P(FILE *__stream, const char *__fmt, ...);






extern int fputs(const char *__str, FILE *__stream);




extern int fputs_P(const char *__str, FILE *__stream);





extern int puts(const char *__str);




extern int puts_P(const char *__str);
# 764 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdio.h" 3
extern size_t fwrite(const void *__ptr, size_t __size, size_t __nmemb,
         FILE *__stream);







extern int fgetc(FILE *__stream);




extern int getc(FILE *__stream);


extern int getchar(void);
# 812 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdio.h" 3
extern int ungetc(int __c, FILE *__stream);
# 824 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdio.h" 3
extern char *fgets(char *__str, int __size, FILE *__stream);






extern char *gets(char *__str);
# 842 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdio.h" 3
extern size_t fread(void *__ptr, size_t __size, size_t __nmemb,
        FILE *__stream);




extern void clearerr(FILE *__stream);
# 859 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdio.h" 3
extern int feof(FILE *__stream);
# 870 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdio.h" 3
extern int ferror(FILE *__stream);






extern int vfscanf(FILE *__stream, const char *__fmt, va_list __ap);




extern int vfscanf_P(FILE *__stream, const char *__fmt, va_list __ap);







extern int fscanf(FILE *__stream, const char *__fmt, ...);




extern int fscanf_P(FILE *__stream, const char *__fmt, ...);






extern int scanf(const char *__fmt, ...);




extern int scanf_P(const char *__fmt, ...);







extern int vscanf(const char *__fmt, va_list __ap);







extern int sscanf(const char *__buf, const char *__fmt, ...);




extern int sscanf_P(const char *__buf, const char *__fmt, ...);
# 940 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdio.h" 3
static __inline__ int fflush(FILE *stream __attribute__((unused)))
{
 return 0;
}






__extension__ typedef long long fpos_t;
extern int fgetpos(FILE *stream, fpos_t *pos);
extern FILE *fopen(const char *path, const char *mode);
extern FILE *freopen(const char *path, const char *mode, FILE *stream);
extern FILE *fdopen(int, const char *);
extern int fseek(FILE *stream, long offset, int whence);
extern int fsetpos(FILE *stream, fpos_t *pos);
extern long ftell(FILE *stream);
extern int fileno(FILE *);
extern void perror(const char *s);
extern int remove(const char *pathname);
extern int rename(const char *oldpath, const char *newpath);
extern void rewind(FILE *stream);
extern void setbuf(FILE *stream, char *buf);
extern int setvbuf(FILE *stream, char *buf, int mode, size_t size);
extern FILE *tmpfile(void);
extern char *tmpnam (char *s);
# 2 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\main.c" 2
# 1 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdlib.h" 1 3
# 48 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdlib.h" 3
# 1 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\lib\\gcc\\avr\\5.4.0\\include\\stddef.h" 1 3 4
# 328 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\lib\\gcc\\avr\\5.4.0\\include\\stddef.h" 3 4
typedef int wchar_t;
# 49 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdlib.h" 2 3
# 70 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdlib.h" 3
typedef struct {
 int quot;
 int rem;
} div_t;


typedef struct {
 long quot;
 long rem;
} ldiv_t;


typedef int (*__compar_fn_t)(const void *, const void *);
# 116 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdlib.h" 3
extern void abort(void) __attribute__((__noreturn__));




extern int abs(int __i) __attribute__((__const__));
# 130 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdlib.h" 3
extern long labs(long __i) __attribute__((__const__));
# 153 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdlib.h" 3
extern void *bsearch(const void *__key, const void *__base, size_t __nmemb,
       size_t __size, int (*__compar)(const void *, const void *));







extern div_t div(int __num, int __denom) __asm__("__divmodhi4") __attribute__((__const__));





extern ldiv_t ldiv(long __num, long __denom) __asm__("__divmodsi4") __attribute__((__const__));
# 185 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdlib.h" 3
extern void qsort(void *__base, size_t __nmemb, size_t __size,
    __compar_fn_t __compar);
# 218 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdlib.h" 3
extern long strtol(const char *__nptr, char **__endptr, int __base);
# 252 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdlib.h" 3
extern unsigned long strtoul(const char *__nptr, char **__endptr, int __base);
# 264 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdlib.h" 3
extern long atol(const char *__s) __attribute__((__pure__));
# 276 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdlib.h" 3
extern int atoi(const char *__s) __attribute__((__pure__));
# 288 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdlib.h" 3
extern void exit(int __status) __attribute__((__noreturn__));
# 300 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdlib.h" 3
extern void *malloc(size_t __size) __attribute__((__malloc__));






extern void free(void *__ptr);




extern size_t __malloc_margin;




extern char *__malloc_heap_start;




extern char *__malloc_heap_end;






extern void *calloc(size_t __nele, size_t __size) __attribute__((__malloc__));
# 348 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdlib.h" 3
extern void *realloc(void *__ptr, size_t __size) __attribute__((__malloc__));

extern double strtod(const char *__nptr, char **__endptr);
# 361 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdlib.h" 3
extern double atof(const char *__nptr);
# 383 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdlib.h" 3
extern int rand(void);



extern void srand(unsigned int __seed);






extern int rand_r(unsigned long *__ctx);
# 428 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdlib.h" 3
extern __inline__ __attribute__((__gnu_inline__))
char *itoa (int __val, char *__s, int __radix)
{
    if (!__builtin_constant_p (__radix)) {
 extern char *__itoa (int, char *, int);
 return __itoa (__val, __s, __radix);
    } else if (__radix < 2 || __radix > 36) {
 *__s = 0;
 return __s;
    } else {
 extern char *__itoa_ncheck (int, char *, unsigned char);
 return __itoa_ncheck (__val, __s, __radix);
    }
}
# 473 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdlib.h" 3
extern __inline__ __attribute__((__gnu_inline__))
char *ltoa (long __val, char *__s, int __radix)
{
    if (!__builtin_constant_p (__radix)) {
 extern char *__ltoa (long, char *, int);
 return __ltoa (__val, __s, __radix);
    } else if (__radix < 2 || __radix > 36) {
 *__s = 0;
 return __s;
    } else {
 extern char *__ltoa_ncheck (long, char *, unsigned char);
 return __ltoa_ncheck (__val, __s, __radix);
    }
}
# 516 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdlib.h" 3
extern __inline__ __attribute__((__gnu_inline__))
char *utoa (unsigned int __val, char *__s, int __radix)
{
    if (!__builtin_constant_p (__radix)) {
 extern char *__utoa (unsigned int, char *, int);
 return __utoa (__val, __s, __radix);
    } else if (__radix < 2 || __radix > 36) {
 *__s = 0;
 return __s;
    } else {
 extern char *__utoa_ncheck (unsigned int, char *, unsigned char);
 return __utoa_ncheck (__val, __s, __radix);
    }
}
# 558 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdlib.h" 3
extern __inline__ __attribute__((__gnu_inline__))
char *ultoa (unsigned long __val, char *__s, int __radix)
{
    if (!__builtin_constant_p (__radix)) {
 extern char *__ultoa (unsigned long, char *, int);
 return __ultoa (__val, __s, __radix);
    } else if (__radix < 2 || __radix > 36) {
 *__s = 0;
 return __s;
    } else {
 extern char *__ultoa_ncheck (unsigned long, char *, unsigned char);
 return __ultoa_ncheck (__val, __s, __radix);
    }
}
# 590 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdlib.h" 3
extern long random(void);




extern void srandom(unsigned long __seed);







extern long random_r(unsigned long *__ctx);
# 649 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdlib.h" 3
extern char *dtostre(double __val, char *__s, unsigned char __prec,
       unsigned char __flags);
# 666 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdlib.h" 3
extern char *dtostrf(double __val, signed char __width,
                     unsigned char __prec, char *__s);
# 685 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\stdlib.h" 3
extern int atexit(void (*)(void));
extern int system (const char *);
extern char *getenv (const char *);
# 3 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\main.c" 2
# 1 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 1 3
# 46 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
# 1 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\lib\\gcc\\avr\\5.4.0\\include\\stddef.h" 1 3 4
# 47 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 2 3
# 125 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern int ffs(int __val) __attribute__((__const__));





extern int ffsl(long __val) __attribute__((__const__));





__extension__ extern int ffsll(long long __val) __attribute__((__const__));
# 150 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern void *memccpy(void *, const void *, int, size_t);
# 162 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern void *memchr(const void *, int, size_t) __attribute__((__pure__));
# 180 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern int memcmp(const void *, const void *, size_t) __attribute__((__pure__));
# 191 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern void *memcpy(void *, const void *, size_t);
# 203 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern void *memmem(const void *, size_t, const void *, size_t) __attribute__((__pure__));
# 213 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern void *memmove(void *, const void *, size_t);
# 225 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern void *memrchr(const void *, int, size_t) __attribute__((__pure__));
# 235 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern void *memset(void *, int, size_t);
# 248 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern char *strcat(char *, const char *);
# 262 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern char *strchr(const char *, int) __attribute__((__pure__));
# 274 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern char *strchrnul(const char *, int) __attribute__((__pure__));
# 287 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern int strcmp(const char *, const char *) __attribute__((__pure__));
# 305 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern char *strcpy(char *, const char *);
# 320 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern int strcasecmp(const char *, const char *) __attribute__((__pure__));
# 333 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern char *strcasestr(const char *, const char *) __attribute__((__pure__));
# 344 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern size_t strcspn(const char *__s, const char *__reject) __attribute__((__pure__));
# 364 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern char *strdup(const char *s1);
# 377 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern size_t strlcat(char *, const char *, size_t);
# 388 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern size_t strlcpy(char *, const char *, size_t);
# 399 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern size_t strlen(const char *) __attribute__((__pure__));
# 411 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern char *strlwr(char *);
# 422 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern char *strncat(char *, const char *, size_t);
# 434 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern int strncmp(const char *, const char *, size_t) __attribute__((__pure__));
# 449 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern char *strncpy(char *, const char *, size_t);
# 464 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern int strncasecmp(const char *, const char *, size_t) __attribute__((__pure__));
# 478 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern size_t strnlen(const char *, size_t) __attribute__((__pure__));
# 491 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern char *strpbrk(const char *__s, const char *__accept) __attribute__((__pure__));
# 505 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern char *strrchr(const char *, int) __attribute__((__pure__));
# 515 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern char *strrev(char *);
# 533 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern char *strsep(char **, const char *);
# 544 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern size_t strspn(const char *__s, const char *__accept) __attribute__((__pure__));
# 557 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern char *strstr(const char *, const char *) __attribute__((__pure__));
# 576 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern char *strtok(char *, const char *);
# 593 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern char *strtok_r(char *, const char *, char **);
# 606 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\string.h" 3
extern char *strupr(char *);



extern int strcoll(const char *s1, const char *s2);
extern char *strerror(int errnum);
extern size_t strxfrm(char *dest, const char *src, size_t n);
# 4 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\main.c" 2

# 1 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\config.h" 1



# 1 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\boards.h" 1
# 5 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\config.h" 2
# 1 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\machines.h" 1
# 6 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\config.h" 2
# 6 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\main.c" 2
# 1 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\settings.h" 1
# 14 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\settings.h"
# 1 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\machinedefs.h" 1
# 15 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\settings.h" 2


# 16 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\settings.h"
typedef struct
{
 uint16_t step_mm[3];
 float max_speed[3];
 float max_accel[3];
 float max_x;
 float max_y;
 float max_z;

} SETTINGS;

extern SETTINGS g_settings;

void settings_load();
void settings_reset();
void settings_save();
# 7 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\main.c" 2
# 1 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\boarddefs.h" 1
# 10 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\boarddefs.h"
# 1 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 1 3
# 89 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
# 1 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\lib\\gcc\\avr\\5.4.0\\include\\stddef.h" 1 3 4
# 90 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 2 3
# 1 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\io.h" 1 3
# 99 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\io.h" 3
# 1 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\sfr_defs.h" 1 3
# 100 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\io.h" 2 3
# 272 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\io.h" 3
# 1 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\iom328p.h" 1 3
# 273 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\io.h" 2 3
# 627 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\io.h" 3
# 1 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\portpins.h" 1 3
# 628 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\io.h" 2 3

# 1 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\common.h" 1 3
# 630 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\io.h" 2 3

# 1 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\version.h" 1 3
# 632 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\io.h" 2 3






# 1 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\fuse.h" 1 3
# 239 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\fuse.h" 3

# 239 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\fuse.h" 3
typedef struct
{
    unsigned char low;
    unsigned char high;
    unsigned char extended;
} __fuse_t;
# 639 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\io.h" 2 3


# 1 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\lock.h" 1 3
# 642 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\io.h" 2 3
# 91 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 2 3
# 1158 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern const void * memchr_P(const void *, int __val, size_t __len) __attribute__((__const__));
# 1172 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern int memcmp_P(const void *, const void *, size_t) __attribute__((__pure__));






extern void *memccpy_P(void *, const void *, int __val, size_t);
# 1188 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern void *memcpy_P(void *, const void *, size_t);






extern void *memmem_P(const void *, size_t, const void *, size_t) __attribute__((__pure__));
# 1207 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern const void * memrchr_P(const void *, int __val, size_t __len) __attribute__((__const__));
# 1217 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern char *strcat_P(char *, const char *);
# 1233 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern const char * strchr_P(const char *, int __val) __attribute__((__const__));
# 1245 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern const char * strchrnul_P(const char *, int __val) __attribute__((__const__));
# 1258 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern int strcmp_P(const char *, const char *) __attribute__((__pure__));
# 1268 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern char *strcpy_P(char *, const char *);
# 1285 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern int strcasecmp_P(const char *, const char *) __attribute__((__pure__));






extern char *strcasestr_P(const char *, const char *) __attribute__((__pure__));
# 1305 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern size_t strcspn_P(const char *__s, const char * __reject) __attribute__((__pure__));
# 1321 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern size_t strlcat_P (char *, const char *, size_t );
# 1334 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern size_t strlcpy_P (char *, const char *, size_t );
# 1346 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern size_t strnlen_P(const char *, size_t) __attribute__((__const__));
# 1357 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern int strncmp_P(const char *, const char *, size_t) __attribute__((__pure__));
# 1376 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern int strncasecmp_P(const char *, const char *, size_t) __attribute__((__pure__));
# 1387 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern char *strncat_P(char *, const char *, size_t);
# 1401 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern char *strncpy_P(char *, const char *, size_t);
# 1416 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern char *strpbrk_P(const char *__s, const char * __accept) __attribute__((__pure__));
# 1427 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern const char * strrchr_P(const char *, int __val) __attribute__((__const__));
# 1447 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern char *strsep_P(char **__sp, const char * __delim);
# 1460 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern size_t strspn_P(const char *__s, const char * __accept) __attribute__((__pure__));
# 1474 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern char *strstr_P(const char *, const char *) __attribute__((__pure__));
# 1496 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern char *strtok_P(char *__s, const char * __delim);
# 1516 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern char *strtok_rP(char *__s, const char * __delim, char **__last);
# 1529 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern size_t strlen_PF(uint_farptr_t src) __attribute__((__const__));
# 1545 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern size_t strnlen_PF(uint_farptr_t src, size_t len) __attribute__((__const__));
# 1560 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern void *memcpy_PF(void *dest, uint_farptr_t src, size_t len);
# 1575 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern char *strcpy_PF(char *dest, uint_farptr_t src);
# 1595 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern char *strncpy_PF(char *dest, uint_farptr_t src, size_t len);
# 1611 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern char *strcat_PF(char *dest, uint_farptr_t src);
# 1632 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern size_t strlcat_PF(char *dst, uint_farptr_t src, size_t siz);
# 1649 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern char *strncat_PF(char *dest, uint_farptr_t src, size_t len);
# 1665 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern int strcmp_PF(const char *s1, uint_farptr_t s2) __attribute__((__pure__));
# 1682 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern int strncmp_PF(const char *s1, uint_farptr_t s2, size_t n) __attribute__((__pure__));
# 1698 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern int strcasecmp_PF(const char *s1, uint_farptr_t s2) __attribute__((__pure__));
# 1716 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern int strncasecmp_PF(const char *s1, uint_farptr_t s2, size_t n) __attribute__((__pure__));
# 1732 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern char *strstr_PF(const char *s1, uint_farptr_t s2);
# 1744 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern size_t strlcpy_PF(char *dst, uint_farptr_t src, size_t siz);
# 1760 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern int memcmp_PF(const void *, uint_farptr_t, size_t) __attribute__((__pure__));
# 1779 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\avr\\include\\avr\\pgmspace.h" 3
extern size_t __strlen_P(const char *) __attribute__((__const__));
__attribute__((__always_inline__)) static __inline__ size_t strlen_P(const char * s);
static __inline__ size_t strlen_P(const char *s) {
  return __builtin_constant_p(__builtin_strlen(s))
     ? __builtin_strlen(s) : __strlen_P(s);
}
# 11 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\boarddefs.h" 2
# 22 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\boarddefs.h"
# 1 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\board.h" 1
# 30 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\board.h"
# 1 "c:\\users\\jcmartins\\desktop\\dev-cpp\\winavr\\lib\\gcc\\avr\\5.4.0\\include\\stdbool.h" 1 3 4
# 31 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\board.h" 2






# 36 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\board.h"
typedef void (*ISRTIMER)();
typedef void (*ISRPINCHANGE)(volatile uint32_t*);
typedef void (*ISRCOMRX)(volatile char);

void board_init();




uint16_t board_getInputs();

uint8_t board_getCriticalInputs();

void board_attachOnInputChange(ISRPINCHANGE handler);

void board_detachOnInputChange();



void board_setStepDirs(uint16_t value);

void board_setOutputs(uint16_t value);


void board_putc(char c);
char board_getc();
char board_peek();
void board_bufferClear();
void board_attachOnReadChar(ISRCOMRX handler);
void board_detachOnReadChar();



void board_enableInterrupts();

void board_disableInterrupts();


void board_startPulse(float frequency);

void board_changePulse(float frequency);

void board_stopPulse();

void board_attachOnPulse(ISRTIMER handler);
void board_detachOnPulse();

void board_attachOnPulseReset(ISRTIMER handler);
void board_detachOnPulseReset();


void board_startIntegrator(float frequency);

void board_stopIntegrator();

void board_attachOnIntegrator(ISRTIMER handler);
void board_detachOnIntegrator();

uint8_t board_readProgMemByte(uint8_t* src);
uint8_t board_eeprom_getc(uint16_t address);
uint8_t board_eeprom_putc(uint16_t address, uint8_t value);



typedef struct {
 uint16_t pulseCounter;
 uint16_t resetPulseCounter;
 uint16_t integratorCounter;
 uint16_t pinChangeCounter;
} PERFORMANCE_METER;

extern volatile PERFORMANCE_METER board_performacecounters;
void board_startPerfCounter();
uint16_t board_stopPerfCounter();
# 23 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\boarddefs.h" 2
# 8 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\main.c" 2

# 1 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\gcode.h" 1
# 49 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\gcode.h"
typedef struct
{

    uint8_t motion : 4;
    uint8_t plane : 2;
    uint8_t distance_mode : 1;
    uint8_t feedrate_mode : 1;

    uint8_t units : 1;
    int8_t cutter_radius_compensation : 2;
    uint8_t tool_length_offset : 1;
    uint8_t return_mode : 1;
    uint8_t coord_system : 3;

    uint8_t path_mode : 2;
    uint8_t stopping : 3;
    uint8_t tool_change : 1;
    uint8_t spindle_turning : 2;

    uint8_t coolant : 2;
    uint8_t feed_speed_override : 1;
    uint8_t nonmodal : 4;
    uint8_t : 1;
} GCODE_GROUPS;

typedef struct
{
    float xyzabc[6];
    float d;
    float f;
    float h;
    float ijk[3];
    float l;
    float p;
    float q;
    float r;
    float s;
    float t;
} GCODE_WORDS;

typedef struct
{
    uint32_t linenum;
    GCODE_GROUPS groups;
    GCODE_WORDS words;
} GCODE_PARSER_STATE;

void gcode_init();
void gcode_parse_nextline();
# 10 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\main.c" 2
# 1 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\planner.h" 1
# 19 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\planner.h"
typedef struct
{
 uint8_t type;
 uint8_t dirs;
 uint32_t steps[3];
 uint32_t totalsteps;
 uint32_t accel_until;
 uint32_t deaccel_from;
 uint16_t accel_rate;
 uint16_t speed_rate;
} PLANNER_MOTION;

typedef struct pl_motion_blk_
{
 uint8_t dirbits;
 uint32_t steps[3];
 uint32_t totalsteps;

 float dir_vect[3];

 float distance;
 float angle_factor;

 float entry_speed_sqr;
 float entry_max_speed_sqr;


 float max_speed;
 float target_speed;
 float acceleration;

 
# 50 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\planner.h" 3 4
_Bool 
# 50 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\planner.h"
     optimal;

 struct pl_motion_blk_ *next;
 struct pl_motion_blk_ *prev;
} PLANNER_MOTION_BLOCK;

void planner_init();

# 57 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\planner.h" 3 4
_Bool 
# 57 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\planner.h"
    planner_buffer_full();

# 58 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\planner.h" 3 4
_Bool 
# 58 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\planner.h"
    planner_buffer_empty();
PLANNER_MOTION_BLOCK* planner_get_block();
float planner_get_block_exit_speed_sqr(PLANNER_MOTION_BLOCK* ptr);
void planner_add_line(float* axis, float feed);
void planner_add_analog_output(uint8_t output, uint8_t value);
void planner_add_digital_output(uint8_t output, uint8_t value);
void planner_add_arc(float* axis, float* center, uint8_t clockwise, uint8_t plane, float feed);
# 11 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\main.c" 2
# 1 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\kinematics.h" 1
# 17 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\kinematics.h"
void kinematics_init();






void kinematics_apply_inverse(float* axis, uint32_t* steps);







void kinematics_apply_forward(uint32_t* steps, float* axis);
# 12 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\main.c" 2
# 1 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\interpolator.h" 1
# 16 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\interpolator.h"
void interpolator_init();
void interpolator_exec_planner_block();
void interpolator_update_profile();
void interpolator_rt_pulse();
void interpolator_rt_integrator();
# 13 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\main.c" 2


int main()
{
 char prog_str[255];


 settings_load();
 board_init();
 gcode_init();
 planner_init();
 kinematics_init();
 interpolator_init();


  printf((strcpy_P(prog_str, 
# 28 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\main.c" 3
        (__extension__({static const char __c[] __attribute__((__progmem__)) = (
# 28 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\main.c"
        "uCNC initialized\n"
# 28 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\main.c" 3
        ); &__c[0];}))
# 28 "C:\\Users\\jcmartins\\Desktop\\uCNC-master\\uCNC\\main.c"
        ), prog_str));

 for(;;)
 {
  for(;;)
  {
   gcode_parse_nextline();





  }
 }

 return 0;
}
