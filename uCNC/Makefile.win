# Project: uCNC
# Makefile created by Dev-C++ 5.11

CPP      = avr-g++.exe
CC       = avr-gcc.exe
WINDRES  = 
OBJ      = main.o settings.o kinematics_cartesian_xyz.o planner.o interpolator_linear.o ringbuffer.o mcu_atmega328p.o cnc.o kinematics_corexy.o parser.o trigger_control.o protocol.o motion_control.o
LINKOBJ  = main.o settings.o kinematics_cartesian_xyz.o planner.o interpolator_linear.o ringbuffer.o mcu_atmega328p.o cnc.o kinematics_corexy.o parser.o trigger_control.o protocol.o motion_control.o
LIBS     = -w -Os -gdwarf-2 -flto -fuse-linker-plugin -Wl,--gc-sections,-u,vfprintf -lprintf_flt -lm -mmcu=atmega328
INCS     = -I"D:/Program Files/Dev-Cpp/WinAVR/avr/include"
CXXINCS  = -I"D:/Program Files/Dev-Cpp/WinAVR/avr/include"
BIN      = uCNC.elf
CXXFLAGS = $(CXXINCS) -Wall -D__DEBUG__ -Os -gdwarf-2 -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects -mmcu=atmega328 -DF_CPU=16000000L -DMCU=MCU_ATMEGA328P
CFLAGS   = $(INCS) -Wall -D__DEBUG__ -Os -gdwarf-2 -w -std=gnu11 -ffunction-sections -fdata-sections -MMD -flto -fno-fat-lto-objects -mmcu=atmega328 -DF_CPU=16000000L -DMCU=MCU_ATMEGA328P
RM       = rm.exe -f

.PHONY: all all-before all-after clean clean-custom

all: all-before $(BIN) all-after

clean: clean-custom
	${RM} $(OBJ) $(BIN)

$(BIN): $(OBJ)
	$(CC) $(LINKOBJ) -o $(BIN) $(LIBS)

main.o: main.c
	$(CC) -c main.c -o main.o $(CFLAGS)

settings.o: settings.c
	$(CC) -c settings.c -o settings.o $(CFLAGS)

kinematics_cartesian_xyz.o: kinematics_cartesian_xyz.c
	$(CC) -c kinematics_cartesian_xyz.c -o kinematics_cartesian_xyz.o $(CFLAGS)

planner.o: planner.c
	$(CC) -c planner.c -o planner.o $(CFLAGS)

interpolator_linear.o: interpolator_linear.c
	$(CC) -c interpolator_linear.c -o interpolator_linear.o $(CFLAGS)

ringbuffer.o: ringbuffer.c
	$(CC) -c ringbuffer.c -o ringbuffer.o $(CFLAGS)

mcu_atmega328p.o: mcu_atmega328p.c
	$(CC) -c mcu_atmega328p.c -o mcu_atmega328p.o $(CFLAGS)

cnc.o: cnc.c
	$(CC) -c cnc.c -o cnc.o $(CFLAGS)

kinematics_corexy.o: kinematics_corexy.c
	$(CC) -c kinematics_corexy.c -o kinematics_corexy.o $(CFLAGS)

parser.o: parser.c
	$(CC) -c parser.c -o parser.o $(CFLAGS)

trigger_control.o: trigger_control.c
	$(CC) -c trigger_control.c -o trigger_control.o $(CFLAGS)

protocol.o: protocol.c
	$(CC) -c protocol.c -o protocol.o $(CFLAGS)

motion_control.o: motion_control.c
	$(CC) -c motion_control.c -o motion_control.o $(CFLAGS)
