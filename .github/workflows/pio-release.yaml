name: PlatformIO CI Builds

on:
  push:
    tags:
    - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Allow all machines to finish building
      matrix:
        boards: [bluepill_f103c8_clone, re_arm, arduinoZero, bluepill_f103c8, rpi_pico, mks_tinybee, rambo, ramps14mirror, rpi_pico_w, d1, arduinoM0, skr_v14_turbo, mks_gen_l_v1, mks_dlc32, x_controller, uno, blackpill_f411ce, blackpill_f401cc, skr_pro_v1_2, uno_shield_v3, mks_base_v13, ramps14, d1_r32, mks_robin_nano_v1_2, mks_dlc]
    
    steps:
    - uses: actions/checkout@v4
    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Cache PlatformIO
      uses: actions/cache@v3
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install PlatformIO
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade platformio
    - name: Run PlatformIO
      run: pio run -e ${{matrix.boards}}
    - name: Upload binaries
      uses: actions/upload-artifact@v3
      with:
          name: ${{matrix.boards}}
          path: |
                .pio/build/${{matrix.boards}}/*.bin
                .pio/build/${{matrix.boards}}/*.hex
                .pio/build/${{matrix.boards}}/*.uf2
    - uses: actions/download-artifact@v3
      with:
        name: ${{matrix.boards}}
        path: ${{matrix.boards}}
    - name: Display structure of downloaded files
      run: ls -R
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ÂµCNC ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_name: ${{matrix.boards}}
        asset_content_type: application/zip
